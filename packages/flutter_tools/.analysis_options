# Specify analysis options.
#
# Note that until there is a default "all-in" lint rule-set we need
# to opt-in to all desired lints (https://github.com/dart-lang/sdk/issues/25843).
# For a list of lints, see: http://dart-lang.github.io/linter/lints/

analyzer:
  language:
    enableSuperMixins: true
  strong-mode: true
  errors:
    # we allow overriding fields (if they use super, ideally...)
    strong_mode_invalid_field_override: ignore
    # we allow type narrowing
    strong_mode_invalid_method_override: ignore
    strong_mode_static_type_error: ignore
    strong_mode_down_cast_composite: ignore
    type_argument_not_matching_bounds: ignore
    # we allow having TODOs in the code
    todo: ignore
linter:
  rules:
    - avoid_empty_else
    - always_declare_return_types
    # - always_specify_types # still a lot of work to do before enabling this one
    # - annotate_overrides # still a lot of work to do before enabling this one
    # - avoid_as # https://github.com/dart-lang/linter/issues/195
    - avoid_init_to_null
    # - avoid_return_types_on_setters # still a lot of work to do before enabling this one
    - camel_case_types
    # - constant_identifier_names # still a lot of work to do before enabling this one
    - empty_constructor_bodies
    - hash_and_equals
    # - implementation_imports # "// ignore:" isn't working yet
    - library_names
    - library_prefixes
    - non_constant_identifier_names
    # - one_member_abstracts # "// ignore:" isn't working yet
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - prefer_is_not_empty
    # - public_member_api_docs # still a lot of work to do before enabling this one
    - slash_for_doc_comments
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - super_goes_last
    # - type_annotate_public_apis # see always_specify_types, which this is a subset of
    - type_init_formals
    - unnecessary_brace_in_string_interp
    - unnecessary_getters_setters
